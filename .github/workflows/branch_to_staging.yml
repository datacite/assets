name: Build/Deploy Branch to Staging
on:
  workflow_dispatch:

env:
  RACK_ENV: stage
  ENV_FILE: .env.stage
  s3_bucket: ${{ secrets.STAGE_S3_BUCKET }}
  s3_region: ${{ secrets.STAGE_S3_BUCKET_REGION }}
  cloudfront_distribution_id: ${{ secrets.STAGE_CLOUDFRONT_DISTRIBUTION_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      rack_env: ${{ env.RACK_ENV }}
      env_file: ${{ env.ENV_FILE }}
    steps:
      - name: Prints Vars
        run: | 
          echo "Exposing env vars"

  build:
    needs: vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: print basic info
        run: |
          echo "ENV_FILE: ${{ needs.vars.outputs.env_file }}"
          echo "RACK_ENV: ${{ needs.vars.outputs.rack_env }}"
          echo "s3_bucket: ${{ env.s3_bucket }}"
          echo "s3_region: ${{ env.s3_region }}"
          echo "cloudfront_distribution_id: ${{ env.cloudfront_distribution_id }}"
          echo "Deploying from repository: ${{ github.repository }}"
          echo "Deployng from branch: ${{ github.ref_name }}"
          echo "Deploying from short sha: $( git rev-parse --short ${{ github.sha }} )"
          echo "Deploying to environment: ${{ needs.vars.outputs.rack_env }}"

      - name: Set Up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Build
        run: |
          cp ${{ needs.vars.outputs.env_file }} .env
          bundle _1.17.3_ install --jobs 4 --retry 3
          yarn install
          wget https://github.com/jgm/pandoc/releases/download/1.19.2.1/pandoc-1.19.2.1-1-amd64.deb
          sudo dpkg -i pandoc-1.19.2.1-1-amd64.deb
          rm pandoc-1.19.2.1-1-amd64.deb
          bundle exec hologram -c hologram.yml
          bundle exec middleman build -e ${{ needs.vars.outputs.rack_env }}
          rm build/*.png build/*.gif

      - name: Deploy Build
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ env.s3_bucket }}
          bucket-region: ${{ env.s3_region }}
          dist-id: ${{ env.cloudfront_distribution_id }}
          invalidation: /
          delete-removed: false

      #- name: Cache
      #  uses: actions/cache@v3
      #  with:
      #    path: build
      #    key: assets-build-${{ github.sha }}
      #    restore-keys: |
      #      assets-build-${{ github.sha }}

  #call_build_and_cache:
  #  needs: vars
  #  name: Call build
  #  uses: ./.github/workflows/build.yml
  #  with:
  #    rack_env: ${{ needs.vars.outputs.rack_env }}
  #    env_file: ${{ needs.vars.outputs.env_file }}
  #  secrets: inherit

  #call_deploy_cached_build:
  # needs: [vars, call_build_and_cache]
  #  name: Call deploy_build.
  #  uses: ./.github/workflows/deploy_build.yml
  #  with:
  #    rack_env: ${{ needs.vars.outputs.rack_env }}
  #    env_file: ${{ needs.vars.outputs.env_file }}
  #  secrets:
  #    s3_bucket: ${{ secrets.STAGE_S3_BUCKET }}
  #    s3_region: ${{ secrets.STAGE_S3_BUCKET_REGION }}
  #    cloudfront_distribution_id: ${{ secrets.STAGE_CLOUDFRONT_DISTRIBUTION_ID }}



