name: Deploy Build
on:
  workflow_call:
    inputs:
      rack_env:
        required: true  
        type: string
      env_file:
        required: true
        type: string
    secrets:
      s3_bucket:
        description: 'The site bucket.'
        required: true
      s3_region:
        description: 'The site region.'
        required: true
      cloudfront_distribution_id:
        description: 'The site cloudfront distribution id.'
        required: true     
       
jobs:
  deploy_build:
    runs-on: ubuntu-latest
    steps:
      - name: print basic info in cached.yml
        run: |
          echo "ENV_FILE: ${{ inputs.env_file }}"
          echo "RACK_ENV: ${{ inputs.rack_env }}"
          echo "S3_BUCKET: ${{ secrets.s3_bucket }}"
          echo "S3_REGION: ${{ secrets.s3_region }}"
          echo "CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.cloudfront_distribution_id }}"
          echo "Deploying from repository: ${{ github.repository }}"
          echo "Deploying from branch: ${{ github.ref_name }}"
          echo "Deploying from sha: $(git rev-parse --short ${{ github.sha }})"
          echo "Deploying to environment: ${{ inputs.rack_env }}"

      - name: Checkout
        uses: actions/checkout@v3
      - name: Get cached build
        uses: actions/cache@v3
        with:
          path: build
          key: assets-build-${{ github.sha }}
          restore-keys: |
            assets-build-${{ github.sha }}

      #- name: Cypress run
      #  uses: cypress-io/github-action@v2
      #  with:
      #    start: bundle exec middleman
      #    wait-on: 'http://localhost:4567'
      #    quiet: true
      #    record: true
      #    parallel: true
      #    group: 'Tests'
      #  env:
      #    CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #

      #- name: Check deployment bucket - stage.
      #  if: secrets.s3_bucket == 'assets.stage.datacite.org'
      #  run: |
      #    echo "DEPLOYING TO STAGING"

      - name: Deploy Cached Build
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.s3_bucket }}
          bucket-region: ${{ secrets.s3_bucket_region }}
          dist-id: ${{ secrets.cloudfront_distribution_id }}
          invalidation: /
          delete-removed: false
